/*
 * XLParser: P a r s e r  S u p p o r t
 *
 * Generated from: xl.g
 *
 * Terence Parr, Russell Quong, Will Cohen, and Hank Dietz: 1989-2001
 * Parr Research Corporation
 * with Purdue University Electrical Engineering
 * with AHPCRC, University of Minnesota
 * ANTLR Version 1.33MR33
 */

#define ANTLR_VERSION	13333
#include "pcctscfg.h"
#include "pccts_stdio.h"
#define ANTLR_SUPPORT_CODE
#include "tokens.h"
#include "XLParser.h"

const ANTLRChar *XLParser::tokenName(int tok)   { return _token_tbl[tok]; }

const ANTLRChar *XLParser::_token_tbl[]={
	/* 00 */	"Invalid",
	/* 01 */	"@",
	/* 02 */	"[\\ \\t\\r]",
	/* 03 */	"\\n",
	/* 04 */	"// ~[\\n@]* [\\n@]",
	/* 05 */	"INTLIT",
	/* 06 */	"CHARLIT",
	/* 07 */	"\"",
	/* 08 */	"PROGRAM",
	/* 09 */	"BEGIN",
	/* 10 */	"END",
	/* 11 */	"VAR",
	/* 12 */	"CONSTANT",
	/* 13 */	"TYPE",
	/* 14 */	"RECORD",
	/* 15 */	"ARRAY",
	/* 16 */	"OF",
	/* 17 */	"PROCEDURE",
	/* 18 */	"PUT",
	/* 19 */	"GET",
	/* 20 */	"SKIPLINE",
	/* 21 */	"NEWLINE",
	/* 22 */	"EXIT",
	/* 23 */	"WHEN",
	/* 24 */	"RETURN",
	/* 25 */	"IF",
	/* 26 */	"THEN",
	/* 27 */	"ELSE",
	/* 28 */	"ELSIF",
	/* 29 */	"WHILE",
	/* 30 */	"LOOP",
	/* 31 */	"AND",
	/* 32 */	"OR",
	/* 33 */	"INTEGER",
	/* 34 */	"BOOLEAN",
	/* 35 */	"DOT",
	/* 36 */	"BECOMES",
	/* 37 */	"COLON",
	/* 38 */	"SEMI",
	/* 39 */	"COMMA",
	/* 40 */	"EQUALS",
	/* 41 */	"LBRACKET",
	/* 42 */	"RBRACKET",
	/* 43 */	"DOTDOT",
	/* 44 */	"LPAREN",
	/* 45 */	"RPAREN",
	/* 46 */	"NOT_EQUALS",
	/* 47 */	"LT",
	/* 48 */	"LTE",
	/* 49 */	"GT",
	/* 50 */	"GTE",
	/* 51 */	"PLUS",
	/* 52 */	"MINUS",
	/* 53 */	"TIMES",
	/* 54 */	"DIV",
	/* 55 */	"MOD",
	/* 56 */	"NOT",
	/* 57 */	"IDENT",
	/* 58 */	"\"\"",
	/* 59 */	"BADSTRING",
	/* 60 */	"STRINGLIT",
	/* 61 */	"~[]",
	/* 62 */	"STRING_LITERAL",
	/* 63 */	"ADD_OP",
	/* 64 */	"RELATIONAL_OP",
	/* 65 */	"BOOLEAN_OP",
	/* 66 */	"MULT_OP",
	/* 67 */	"CONST"
};

XLParser::XLParser(ANTLRTokenBuffer *input) : ANTLRParser(input,2,0,0,zzSET_SIZE /* 12 */)
{
	token_tbl = _token_tbl;
	traceOptionValueDefault=0;		// MR10 turn trace OFF
}

SetWordType XLParser::err1[zzSET_SIZE /* 12 */] = {0x0,0x28,0x0,0x0, 0x0,0x0,0x0,0x0, 0x8,0x0,0x0,0x0
	};
SetWordType XLParser::err2[zzSET_SIZE /* 12 */] = {0x0,0x0,0x0,0x0, 0x50,0x0,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType XLParser::setwd1[68] = {0x0,0x1,0x0,0x0,0x0,0x8,0x0,
	0x0,0x0,0xe0,0xc,0xe2,0x0,0xe2,0x0,
	0x0,0x0,0xe0,0xc,0xc,0xc,0xc,0xc,
	0x8,0xc,0xc,0x0,0x0,0x0,0xc,0xc,
	0x0,0x0,0x0,0x0,0x18,0x8,0x0,0x18,
	0x0,0x0,0x8,0x0,0x0,0x8,0x0,0x0,
	0x0,0x0,0x0,0x0,0x8,0x8,0x0,0x0,
	0x0,0x8,0xc,0x0,0x8,0x8,0x0,0x0,
	0x0,0x0,0x0,0x0,0xe2};
SetWordType XLParser::STRING_LITERAL_set[12] = {0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x18};
SetWordType XLParser::STRING_LITERAL_errset[12] = {0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x18};
SetWordType XLParser::err5[zzSET_SIZE /* 12 */] = {0x20,0x0,0x0,0x0, 0x0,0x0,0x0,0x1a, 0x0,0x0,0x0,0x0
	};
SetWordType XLParser::err6[zzSET_SIZE /* 12 */] = {0x0,0xc0,0x0,0x0, 0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType XLParser::err7[zzSET_SIZE /* 12 */] = {0x20,0x0,0x0,0x0, 0x0,0x0,0x0,0x2, 0x0,0x0,0x0,0x0
	};
SetWordType XLParser::err8[zzSET_SIZE /* 12 */] = {0x0,0x0,0x0,0x0, 0x6,0x0,0x0,0x2, 0x0,0x0,0x0,0x0
	};
SetWordType XLParser::err9[zzSET_SIZE /* 12 */] = {0x0,0x0,0x0,0x0, 0x0,0x11,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType XLParser::setwd2[68] = {0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x8,0x4,0x8,0x0,0x8,0x0,
	0x0,0x0,0x8,0x4,0x4,0x4,0x4,0x4,
	0x0,0x4,0x4,0x4,0x4,0x4,0x4,0x4,
	0x4,0x4,0x0,0x0,0x0,0x80,0x1,0xd4,
	0x4,0x4,0x0,0x24,0x20,0x0,0x84,0x4,
	0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,
	0x4,0x0,0x4,0x0,0x2,0x2,0x0,0x0,
	0x0,0x0,0x0,0x0,0x8};
SetWordType XLParser::err10[zzSET_SIZE /* 12 */] = {0x0,0x8,0x0,0x0, 0x0,0x0,0x0,0x2, 0x0,0x0,0x0,0x0
	};
SetWordType XLParser::err11[zzSET_SIZE /* 12 */] = {0x0,0x4,0x7c,0x63, 0x0,0x0,0x0,0x2, 0x0,0x0,0x0,0x0
	};
SetWordType XLParser::err12[zzSET_SIZE /* 12 */] = {0x20,0x4,0xfc,0x63, 0x58,0x12,0x18,0x1b, 0x0,0x0,0x0,0x0
	};
SetWordType XLParser::setwd3[68] = {0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x1,0x80,0x0,0x0,0x0,0x0,
	0x0,0x0,0x1,0x90,0x90,0x90,0x90,0x80,
	0x0,0x80,0x80,0x0,0x80,0x80,0x88,0x88,
	0x0,0x0,0x0,0x0,0x40,0x40,0x0,0x24,
	0x0,0x2,0x40,0x0,0x0,0x20,0x4,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x80,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0};
SetWordType XLParser::err13[zzSET_SIZE /* 12 */] = {0x0,0x0,0x0,0x0, 0x40,0x10,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType XLParser::err14[zzSET_SIZE /* 12 */] = {0x20,0x0,0x0,0x0, 0x0,0x30,0x18,0x1b, 0x0,0x0,0x0,0x0
	};
SetWordType XLParser::setwd4[68] = {0x0,0x0,0x0,0x0,0x0,0x8,0x0,
	0x0,0x0,0x0,0xe7,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0xe7,0xe7,0xe7,0xe7,0xe7,
	0x0,0xe7,0xe7,0x0,0x67,0x67,0xe7,0xe7,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x10,
	0x0,0x0,0x0,0x0,0x0,0x8,0x0,0x0,
	0x0,0x0,0x0,0x0,0x8,0x8,0x0,0x0,
	0x0,0x8,0xef,0x0,0x8,0x8,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0};
SetWordType XLParser::err15[zzSET_SIZE /* 12 */] = {0x0,0x4,0x0,0x18, 0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType XLParser::err16[zzSET_SIZE /* 12 */] = {0x0,0x0,0x0,0x60, 0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType XLParser::setwd5[68] = {0x0,0x0,0x0,0x0,0x0,0x25,0x0,
	0x0,0x0,0x0,0xff,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0xf7,0xf7,0xf7,0xf7,0xf7,
	0x25,0xf7,0xf7,0x0,0xc0,0xc0,0xf7,0xf7,
	0x0,0x0,0x0,0x0,0x25,0x25,0x0,0x25,
	0x0,0x0,0x25,0x0,0x0,0x25,0x0,0x0,
	0x0,0x0,0x0,0x0,0x25,0x25,0x0,0x0,
	0x0,0x25,0xf7,0x0,0x25,0x25,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0};
SetWordType XLParser::err17[zzSET_SIZE /* 12 */] = {0x0,0x0,0x0,0x0, 0x40,0x10,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType XLParser::err18[zzSET_SIZE /* 12 */] = {0x0,0x0,0x0,0x0, 0x40,0x10,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType XLParser::err19[zzSET_SIZE /* 12 */] = {0x0,0x0,0x3c,0x0, 0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType XLParser::err20[zzSET_SIZE /* 12 */] = {0x20,0x0,0x0,0x0, 0x0,0x10,0x0,0x1a, 0x0,0x0,0x0,0x0
	};
SetWordType XLParser::err21[zzSET_SIZE /* 12 */] = {0x20,0x4,0x7c,0xff, 0xc9,0xf7,0xff,0x1b, 0x0,0x0,0x0,0x0
	};
SetWordType XLParser::setwd6[68] = {0x0,0x0,0x0,0x0,0x0,0x8,0x0,
	0x0,0x0,0x0,0xf6,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0xf6,0xf6,0xf6,0xf6,0xf6,
	0x0,0xf6,0xf6,0xf2,0xf6,0xf6,0xf6,0xf6,
	0xf2,0xf2,0x0,0x0,0x21,0x2,0x0,0xf2,
	0xf2,0xf2,0x21,0xf2,0x0,0x0,0xf2,0xf2,
	0xf2,0xf2,0xf2,0xf2,0xf2,0xf2,0xf2,0xf2,
	0xf2,0x0,0xfe,0x0,0x8,0x8,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0};
SetWordType XLParser::ADD_OP_set[12] = {0x0,0x0,0x0,0x0, 0x0,0x0,0x18,0x0};
SetWordType XLParser::ADD_OP_errset[12] = {0x0,0x0,0x0,0x0, 0x0,0x0,0x18,0x0};
SetWordType XLParser::MULT_OP_set[12] = {0x0,0x0,0x0,0x0, 0x0,0x0,0xe0,0x0};
SetWordType XLParser::MULT_OP_errset[12] = {0x0,0x0,0x0,0x0, 0x0,0x0,0xe0,0x0};
SetWordType XLParser::RELATIONAL_OP_set[12] = {0x0,0x0,0x0,0x0, 0x0,0xc1,0x7,0x0};
SetWordType XLParser::RELATIONAL_OP_errset[12] = {0x0,0x0,0x0,0x0, 0x0,0xc1,0x7,0x0};
SetWordType XLParser::setwd7[68] = {0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0xaa,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0xaa,0xaa,0xaa,0xaa,0xaa,
	0x0,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
	0xaa,0xaa,0x0,0x0,0x0,0x0,0x0,0xaa,
	0xaa,0x6a,0x0,0xaa,0x0,0x0,0xaa,0x6a,
	0x6a,0x6a,0x6a,0x6a,0x1b,0x1b,0x6,0x6,
	0x6,0x0,0xaa,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0};
SetWordType XLParser::BOOLEAN_OP_set[12] = {0x0,0x0,0x0,0x80, 0x1,0x0,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType XLParser::BOOLEAN_OP_errset[12] = {0x0,0x0,0x0,0x80, 0x1,0x0,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType XLParser::setwd8[68] = {0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x2,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x2,0x2,0x2,0x2,0x2,
	0x0,0x2,0x2,0x2,0x2,0x2,0x2,0x2,
	0x1,0x1,0x0,0x0,0x0,0x0,0x0,0x2,
	0x2,0x0,0x0,0x2,0x0,0x0,0x2,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x2,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0};
